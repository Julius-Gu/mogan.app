import{_ as s,c as a,o as n,N as o}from"./chunks/framework.72fe3cca.js";const A=JSON.parse('{"title":"开发者文档","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/Develop_on_Windows.md","lastUpdated":1674911793000}'),l={name:"zh/guide/Develop_on_Windows.md"},p=o(`<h1 id="开发者文档" tabindex="-1">开发者文档 <a class="header-anchor" href="#开发者文档" aria-label="Permalink to &quot;开发者文档&quot;">​</a></h1><h2 id="using-xmake-on-windows" tabindex="-1">Using xmake on Windows <a class="header-anchor" href="#using-xmake-on-windows" aria-label="Permalink to &quot;Using xmake on Windows&quot;">​</a></h2><p>墨干的代码使用变长数组，因此不能用msvc来编译开发。推荐使用mingw编译器来开发。</p><h3 id="第一步-安装xmake、mingw、msys以及qt" tabindex="-1">第一步：安装xmake、mingw、msys以及Qt <a class="header-anchor" href="#第一步-安装xmake、mingw、msys以及qt" aria-label="Permalink to &quot;第一步：安装xmake、mingw、msys以及Qt&quot;">​</a></h3><p>开发者需要安装下列工具：</p><ul><li><a href="https://www.qt.io/download" target="_blank" rel="noreferrer">Qt</a><ul><li>只需要安装适配mingw 8.1.0的qt库。Qt5和Qt6都可以安装。不需要安装Qt script等其他框架。</li><li>推荐安装Qt提供的mingw 8.1.0编译器，这个编译器在tools子菜单下。</li></ul></li><li><a href="https://github.com/msys2/msys2-installer/releases" target="_blank" rel="noreferrer">msys environment</a></li><li>mingw 8.1.0编译器（见下文）。</li><li>xmake（见下文）。</li></ul><p>既可以用msys2的pacman安装xmake，也可以用xmake的安装包来安装。</p><p><strong>注意</strong>: msys提供的Mingw版本很高，与墨干的代码不兼容。请通过qt安装程序或者chocolate安装8.1.0版本的Mingw。</p><p>有时，开发者要更新xmake的包数据：</p><div class="language-pwsh"><button title="Copy Code" class="copy"></button><span class="lang">pwsh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">xrepo update-repo</span></span></code></pre></div><h3 id="第二步-编译" tabindex="-1">第二步：编译 <a class="header-anchor" href="#第二步-编译" aria-label="Permalink to &quot;第二步：编译&quot;">​</a></h3><p>在msys命令行下运行这两条命令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--qt=</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">newly</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">installed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">qt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">addres</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/5.x.x/mingw81_64</span></span>
<span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--jobs=</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">numbers</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">processes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">computer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">can</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">support,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">same</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mak</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="第三步-运行单元测试" tabindex="-1">第三步：运行单元测试 <a class="header-anchor" href="#第三步-运行单元测试" aria-label="Permalink to &quot;第三步：运行单元测试&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">windeployqt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--compiler-runtime</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./build/mingw/x86_64/release/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-printsupport</span></span>
<span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--yes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--diagnosis</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--group=tests</span></span>
<span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--yes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--diagnosis</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--group=keneral_tests</span></span></code></pre></div><h3 id="第四步-安装到build-package目录" tabindex="-1">第四步：安装到<code>build/package</code>目录 <a class="header-anchor" href="#第四步-安装到build-package目录" aria-label="Permalink to &quot;第四步：安装到\`build/package\`目录&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build/package</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mogan_install</span></span>
<span class="line"><span style="color:#FFCB6B;">windeployqt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--compiler-runtime</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./build/package/bin/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-printsupport</span></span></code></pre></div><p>墨干编辑器的某些功能需要其他程序来配合。这些程序在<a href="https://github.com/XmacsLabs/mogan-dependencies" target="_blank" rel="noreferrer">xmacslabs/mogan-dependencies</a>仓库下。</p><h3 id="第五步-启动墨干编辑器" tabindex="-1">第五步：启动墨干编辑器 <a class="header-anchor" href="#第五步-启动墨干编辑器" aria-label="Permalink to &quot;第五步：启动墨干编辑器&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">build/package/bin/mogan.exe</span></span></code></pre></div><h3 id="在vscode下开发-可选" tabindex="-1">在VSCode下开发（可选） <a class="header-anchor" href="#在vscode下开发-可选" aria-label="Permalink to &quot;在VSCode下开发（可选）&quot;">​</a></h3><p>如果用VSCode来开发，xmake可以生成<code>compile_command.json</code>文件。如果提供这份文件，VSCode的C++插件会根据这个文件来识别项目结构，提供正确的语义高亮等语义提示。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">project</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--kind=compile_commands</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./.vscode</span></span></code></pre></div><p>修改<code>.vscode/c_cpp_properties.json</code>文件才能使刚刚生成的<code>compile_command.json</code>文件生效。</p><div class="language-jsonc"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">configurations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">// other configs</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">compilerPath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;your configuration&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">cppStandard</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">gnu++17</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">intelliSenseMode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windows-gcc-x64</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">compileCommands</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.vscode/compile_commands.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="在linux或wsl环境下使用cmake开发" tabindex="-1">在Linux或WSL环境下使用CMake开发 <a class="header-anchor" href="#在linux或wsl环境下使用cmake开发" aria-label="Permalink to &quot;在Linux或WSL环境下使用CMake开发&quot;">​</a></h2><p>我们需要在Windows上使用WSL里面的Ubuntu 20.04或者在Ubuntu 20.04上启动Windows的虚拟机。因为构建是在Ubuntu上面完成，而测试是在Windows上完成。</p><p>首先，我们需要完成MXE的下载和相关依赖的安装，可以参考这个文档： <a href="https://texmacs.github.io/notes/docs/build-using-cmake-and-mxe-on-wsl.html" target="_blank" rel="noreferrer">https://texmacs.github.io/notes/docs/build-using-cmake-and-mxe-on-wsl.html</a></p><p>假定你已经在mogan的源代码目录：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rm -rf build/</span></span>
<span class="line"><span style="color:#A6ACCD;">./packages/windows/package.sh</span></span></code></pre></div><p>安装完成之后，我们需要通过虚拟机和宿主机之间的文件共享，在Windows系统中启动墨干，并做测试。</p>`,31),e=[p];function t(c,r,i,C,y,D){return n(),a("div",null,e)}const m=s(l,[["render",t]]);export{A as __pageData,m as default};
