import{_ as a,c as s,o as e,N as n}from"./chunks/framework.72fe3cca.js";const m=JSON.parse('{"title":"Developing on macOS","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Develop_on_macOS.md","lastUpdated":1673880204000}'),o={name:"guide/Develop_on_macOS.md"},l=n('<h1 id="developing-on-macos" tabindex="-1">Developing on macOS <a class="header-anchor" href="#developing-on-macos" aria-label="Permalink to &quot;Developing on macOS&quot;">​</a></h1><h2 id="using-xmake" tabindex="-1">Using xmake <a class="header-anchor" href="#using-xmake" aria-label="Permalink to &quot;Using xmake&quot;">​</a></h2><h3 id="step-1-install-xmake-and-xrepo" tabindex="-1">Step 1: Install xmake and xrepo <a class="header-anchor" href="#step-1-install-xmake-and-xrepo" aria-label="Permalink to &quot;Step 1: Install xmake and xrepo&quot;">​</a></h3><p>For Homebrew:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">brew install xmake qt@5 ccache</span></span>\n<span class="line"><span style="color:#A6ACCD;">brew link qt@5</span></span></code></pre></div><p>Sometimes, we need the latest xrepo:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xrepo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update-repo</span></span></code></pre></div><h3 id="step-2-compile" tabindex="-1">Step 2: Compile <a class="header-anchor" href="#step-2-compile" aria-label="Permalink to &quot;Step 2: Compile&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--yes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--jobs=8</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span></span></code></pre></div><h3 id="step-3-run-unit-test" tabindex="-1">Step 3: Run unit test <a class="header-anchor" href="#step-3-run-unit-test" aria-label="Permalink to &quot;Step 3: Run unit test&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--yes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--diagnosis</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--group=tests</span></span></code></pre></div><h3 id="step-4-install-to-build-macosx-arch-release-mogan-app" tabindex="-1">Step 4: Install to <code>build/macosx/{arch}/release/Mogan.app/</code> <a class="header-anchor" href="#step-4-install-to-build-macosx-arch-release-mogan-app" aria-label="Permalink to &quot;Step 4: Install to `build/macosx/{arch}/release/Mogan.app/`&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build/macosx/</span><span style="color:#89DDFF;">`</span><span style="color:#FFCB6B;">arch</span><span style="color:#89DDFF;">`</span><span style="color:#FFCB6B;">/release/Mogan.app/Contents/Resources/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mogan_install</span></span></code></pre></div><h3 id="step-5-launch-mogan-editor" tabindex="-1">Step 5: Launch Mogan Editor <a class="header-anchor" href="#step-5-launch-mogan-editor" aria-label="Permalink to &quot;Step 5: Launch Mogan Editor&quot;">​</a></h3><p>Sometimes (for macOS M1), we need to codesign it first</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">codesign</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--force</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--deep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--sign</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./build/macosx/arm64/release/Mogan.app</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/build/macosx/</span><span style="color:#89DDFF;">`</span><span style="color:#FFCB6B;">arch</span><span style="color:#89DDFF;">`</span><span style="color:#FFCB6B;">/release/Mogan.app/Contents/MacOS/Mogan</span></span></code></pre></div><h2 id="using-cmake" tabindex="-1">Using cmake <a class="header-anchor" href="#using-cmake" aria-label="Permalink to &quot;Using cmake&quot;">​</a></h2><p>Assuming you are in the project root of mogan:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>\n<span class="line"><span style="color:#FFCB6B;">cmake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">..</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-DCMAKE_INSTALL_PREFIX=</span><span style="color:#A6ACCD;">$HOME</span><span style="color:#C3E88D;">/software</span></span>\n<span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-j12</span></span></code></pre></div><p>Now, you can launch Mogan via:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$HOME/software/bin/mogan.sh</span></span></code></pre></div><p>Using <code>make install</code> and developing in a separated folder could help you setup a clean environment. If you are familiar with the source code, you can change the TEXMACS_PATH to develop on the Scheme part without having to build the C++ part.</p>',23),p=[l];function t(c,r,i,C,d,h){return e(),s("div",null,p)}const u=a(o,[["render",t]]);export{m as __pageData,u as default};
